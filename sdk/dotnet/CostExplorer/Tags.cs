// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CostExplorer
{
    public static class Tags
    {
        /// <summary>
        /// Provides details about a specific CE Tags.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var test = Output.Create(Aws.CostExplorer.Tags.InvokeAsync(new Aws.CostExplorer.TagsArgs
        ///         {
        ///             TimePeriod = new Aws.CostExplorer.Inputs.TagsTimePeriodArgs
        ///             {
        ///                 End = "2022-12-01",
        ///                 Start = "2021-01-01",
        ///             },
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<TagsResult> InvokeAsync(TagsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<TagsResult>("aws:costexplorer/tags:Tags", args ?? new TagsArgs(), options.WithDefaults());

        /// <summary>
        /// Provides details about a specific CE Tags.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var test = Output.Create(Aws.CostExplorer.Tags.InvokeAsync(new Aws.CostExplorer.TagsArgs
        ///         {
        ///             TimePeriod = new Aws.CostExplorer.Inputs.TagsTimePeriodArgs
        ///             {
        ///                 End = "2022-12-01",
        ///                 Start = "2021-01-01",
        ///             },
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<TagsResult> Invoke(TagsInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<TagsResult>("aws:costexplorer/tags:Tags", args ?? new TagsInvokeArgs(), options.WithDefaults());
    }


    public sealed class TagsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Configuration block for the `Expression` object used to categorize costs. See below.
        /// </summary>
        [Input("filter")]
        public Inputs.TagsFilterArgs? Filter { get; set; }

        /// <summary>
        /// Value that you want to search for.
        /// </summary>
        [Input("searchString")]
        public string? SearchString { get; set; }

        [Input("sortBies")]
        private List<Inputs.TagsSortByArgs>? _sortBies;

        /// <summary>
        /// Configuration block for the value by which you want to sort the data. See below.
        /// </summary>
        public List<Inputs.TagsSortByArgs> SortBies
        {
            get => _sortBies ?? (_sortBies = new List<Inputs.TagsSortByArgs>());
            set => _sortBies = value;
        }

        /// <summary>
        /// Key of the tag that you want to return values for.
        /// </summary>
        [Input("tagKey")]
        public string? TagKey { get; set; }

        /// <summary>
        /// Configuration block for the start and end dates for retrieving the dimension values.
        /// </summary>
        [Input("timePeriod", required: true)]
        public Inputs.TagsTimePeriodArgs TimePeriod { get; set; } = null!;

        public TagsArgs()
        {
        }
    }

    public sealed class TagsInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Configuration block for the `Expression` object used to categorize costs. See below.
        /// </summary>
        [Input("filter")]
        public Input<Inputs.TagsFilterInputArgs>? Filter { get; set; }

        /// <summary>
        /// Value that you want to search for.
        /// </summary>
        [Input("searchString")]
        public Input<string>? SearchString { get; set; }

        [Input("sortBies")]
        private InputList<Inputs.TagsSortByInputArgs>? _sortBies;

        /// <summary>
        /// Configuration block for the value by which you want to sort the data. See below.
        /// </summary>
        public InputList<Inputs.TagsSortByInputArgs> SortBies
        {
            get => _sortBies ?? (_sortBies = new InputList<Inputs.TagsSortByInputArgs>());
            set => _sortBies = value;
        }

        /// <summary>
        /// Key of the tag that you want to return values for.
        /// </summary>
        [Input("tagKey")]
        public Input<string>? TagKey { get; set; }

        /// <summary>
        /// Configuration block for the start and end dates for retrieving the dimension values.
        /// </summary>
        [Input("timePeriod", required: true)]
        public Input<Inputs.TagsTimePeriodInputArgs> TimePeriod { get; set; } = null!;

        public TagsInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class TagsResult
    {
        public readonly Outputs.TagsFilterResult? Filter;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? SearchString;
        public readonly ImmutableArray<Outputs.TagsSortByResult> SortBies;
        public readonly string? TagKey;
        /// <summary>
        /// Tags that match your request.
        /// </summary>
        public readonly ImmutableArray<string> Tags;
        public readonly Outputs.TagsTimePeriodResult TimePeriod;

        [OutputConstructor]
        private TagsResult(
            Outputs.TagsFilterResult? filter,

            string id,

            string? searchString,

            ImmutableArray<Outputs.TagsSortByResult> sortBies,

            string? tagKey,

            ImmutableArray<string> tags,

            Outputs.TagsTimePeriodResult timePeriod)
        {
            Filter = filter;
            Id = id;
            SearchString = searchString;
            SortBies = sortBies;
            TagKey = tagKey;
            Tags = tags;
            TimePeriod = timePeriod;
        }
    }
}
