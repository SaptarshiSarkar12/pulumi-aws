// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package memorydb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides information about a MQ Broker Instance Offerings.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/memorydb"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := memorydb.GetBrokerInstanceTypeOfferings(ctx, nil, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = memorydb.GetBrokerInstanceTypeOfferings(ctx, &memorydb.GetBrokerInstanceTypeOfferingsArgs{
// 			EngineType: pulumi.StringRef("ACTIVEMQ"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = memorydb.GetBrokerInstanceTypeOfferings(ctx, &memorydb.GetBrokerInstanceTypeOfferingsArgs{
// 			StorageType: pulumi.StringRef("EBS"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = memorydb.GetBrokerInstanceTypeOfferings(ctx, &memorydb.GetBrokerInstanceTypeOfferingsArgs{
// 			HostInstanceType: pulumi.StringRef("mq.m5.large"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = memorydb.GetBrokerInstanceTypeOfferings(ctx, &memorydb.GetBrokerInstanceTypeOfferingsArgs{
// 			EngineType:       pulumi.StringRef("ACTIVEMQ"),
// 			HostInstanceType: pulumi.StringRef("mq.m5.large"),
// 			StorageType:      pulumi.StringRef("EBS"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetBrokerInstanceTypeOfferings(ctx *pulumi.Context, args *GetBrokerInstanceTypeOfferingsArgs, opts ...pulumi.InvokeOption) (*GetBrokerInstanceTypeOfferingsResult, error) {
	var rv GetBrokerInstanceTypeOfferingsResult
	err := ctx.Invoke("aws:memorydb/getBrokerInstanceTypeOfferings:getBrokerInstanceTypeOfferings", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBrokerInstanceTypeOfferings.
type GetBrokerInstanceTypeOfferingsArgs struct {
	// Filter response by engine type.
	EngineType *string `pulumi:"engineType"`
	// Filter response by host instance type.
	HostInstanceType *string `pulumi:"hostInstanceType"`
	// Filter response by storage type.
	StorageType *string `pulumi:"storageType"`
}

// A collection of values returned by getBrokerInstanceTypeOfferings.
type GetBrokerInstanceTypeOfferingsResult struct {
	// Option for host instance type. See Broker Instance Options below.
	BrokerInstanceOptions []GetBrokerInstanceTypeOfferingsBrokerInstanceOption `pulumi:"brokerInstanceOptions"`
	// The broker's engine type.
	EngineType *string `pulumi:"engineType"`
	// The broker's instance type.
	HostInstanceType *string `pulumi:"hostInstanceType"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The broker's storage type.
	StorageType *string `pulumi:"storageType"`
}

func GetBrokerInstanceTypeOfferingsOutput(ctx *pulumi.Context, args GetBrokerInstanceTypeOfferingsOutputArgs, opts ...pulumi.InvokeOption) GetBrokerInstanceTypeOfferingsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetBrokerInstanceTypeOfferingsResult, error) {
			args := v.(GetBrokerInstanceTypeOfferingsArgs)
			r, err := GetBrokerInstanceTypeOfferings(ctx, &args, opts...)
			var s GetBrokerInstanceTypeOfferingsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetBrokerInstanceTypeOfferingsResultOutput)
}

// A collection of arguments for invoking getBrokerInstanceTypeOfferings.
type GetBrokerInstanceTypeOfferingsOutputArgs struct {
	// Filter response by engine type.
	EngineType pulumi.StringPtrInput `pulumi:"engineType"`
	// Filter response by host instance type.
	HostInstanceType pulumi.StringPtrInput `pulumi:"hostInstanceType"`
	// Filter response by storage type.
	StorageType pulumi.StringPtrInput `pulumi:"storageType"`
}

func (GetBrokerInstanceTypeOfferingsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrokerInstanceTypeOfferingsArgs)(nil)).Elem()
}

// A collection of values returned by getBrokerInstanceTypeOfferings.
type GetBrokerInstanceTypeOfferingsResultOutput struct{ *pulumi.OutputState }

func (GetBrokerInstanceTypeOfferingsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrokerInstanceTypeOfferingsResult)(nil)).Elem()
}

func (o GetBrokerInstanceTypeOfferingsResultOutput) ToGetBrokerInstanceTypeOfferingsResultOutput() GetBrokerInstanceTypeOfferingsResultOutput {
	return o
}

func (o GetBrokerInstanceTypeOfferingsResultOutput) ToGetBrokerInstanceTypeOfferingsResultOutputWithContext(ctx context.Context) GetBrokerInstanceTypeOfferingsResultOutput {
	return o
}

// Option for host instance type. See Broker Instance Options below.
func (o GetBrokerInstanceTypeOfferingsResultOutput) BrokerInstanceOptions() GetBrokerInstanceTypeOfferingsBrokerInstanceOptionArrayOutput {
	return o.ApplyT(func(v GetBrokerInstanceTypeOfferingsResult) []GetBrokerInstanceTypeOfferingsBrokerInstanceOption {
		return v.BrokerInstanceOptions
	}).(GetBrokerInstanceTypeOfferingsBrokerInstanceOptionArrayOutput)
}

// The broker's engine type.
func (o GetBrokerInstanceTypeOfferingsResultOutput) EngineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBrokerInstanceTypeOfferingsResult) *string { return v.EngineType }).(pulumi.StringPtrOutput)
}

// The broker's instance type.
func (o GetBrokerInstanceTypeOfferingsResultOutput) HostInstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBrokerInstanceTypeOfferingsResult) *string { return v.HostInstanceType }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetBrokerInstanceTypeOfferingsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrokerInstanceTypeOfferingsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The broker's storage type.
func (o GetBrokerInstanceTypeOfferingsResultOutput) StorageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBrokerInstanceTypeOfferingsResult) *string { return v.StorageType }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetBrokerInstanceTypeOfferingsResultOutput{})
}
