// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

export function getNetworkAcls(args?: GetNetworkAclsArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkAclsResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws:ec2/getNetworkAcls:getNetworkAcls", {
        "filters": args.filters,
        "tags": args.tags,
        "vpcId": args.vpcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNetworkAcls.
 */
export interface GetNetworkAclsArgs {
    /**
     * Custom filter block as described below.
     */
    filters?: inputs.ec2.GetNetworkAclsFilter[];
    /**
     * A map of tags, each pair of which must exactly match
     * a pair on the desired network ACLs.
     */
    tags?: {[key: string]: string};
    /**
     * The VPC ID that you want to filter from.
     */
    vpcId?: string;
}

/**
 * A collection of values returned by getNetworkAcls.
 */
export interface GetNetworkAclsResult {
    readonly filters?: outputs.ec2.GetNetworkAclsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list of all the network ACL ids found.
     */
    readonly ids: string[];
    readonly tags: {[key: string]: string};
    readonly vpcId?: string;
}

export function getNetworkAclsOutput(args?: GetNetworkAclsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkAclsResult> {
    return pulumi.output(args).apply(a => getNetworkAcls(a, opts))
}

/**
 * A collection of arguments for invoking getNetworkAcls.
 */
export interface GetNetworkAclsOutputArgs {
    /**
     * Custom filter block as described below.
     */
    filters?: pulumi.Input<pulumi.Input<inputs.ec2.GetNetworkAclsFilterArgs>[]>;
    /**
     * A map of tags, each pair of which must exactly match
     * a pair on the desired network ACLs.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The VPC ID that you want to filter from.
     */
    vpcId?: pulumi.Input<string>;
}
