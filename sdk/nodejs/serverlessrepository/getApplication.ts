// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to get information about an AWS Serverless Application Repository application. For example, this can be used to determine the required `capabilities` for an application.
 */
export function getApplication(args: GetApplicationArgs, opts?: pulumi.InvokeOptions): Promise<GetApplicationResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aws:serverlessrepository/getApplication:getApplication", {
        "applicationId": args.applicationId,
        "semanticVersion": args.semanticVersion,
    }, opts);
}

/**
 * A collection of arguments for invoking getApplication.
 */
export interface GetApplicationArgs {
    /**
     * The ARN of the application.
     */
    applicationId: string;
    /**
     * The requested version of the application. By default, retrieves the latest version.
     */
    semanticVersion?: string;
}

/**
 * A collection of values returned by getApplication.
 */
export interface GetApplicationResult {
    /**
     * The ARN of the application.
     */
    readonly applicationId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The name of the application.
     */
    readonly name: string;
    /**
     * A list of capabilities describing the permissions needed to deploy the application.
     */
    readonly requiredCapabilities: string[];
    readonly semanticVersion: string;
    /**
     * A URL pointing to the source code of the application version.
     */
    readonly sourceCodeUrl: string;
    /**
     * A URL pointing to the Cloud Formation template for the application version.
     */
    readonly templateUrl: string;
}

export function getApplicationOutput(args: GetApplicationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApplicationResult> {
    return pulumi.output(args).apply(a => getApplication(a, opts))
}

/**
 * A collection of arguments for invoking getApplication.
 */
export interface GetApplicationOutputArgs {
    /**
     * The ARN of the application.
     */
    applicationId: pulumi.Input<string>;
    /**
     * The requested version of the application. By default, retrieves the latest version.
     */
    semanticVersion?: pulumi.Input<string>;
}
